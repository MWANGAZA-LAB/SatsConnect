version: '3.8'

services:
  # Rust Lightning Engine
  rust-engine:
    build:
      context: ../../
      dockerfile: infra/docker/backend-rust.Dockerfile
    container_name: satsconnect-rust-engine
    ports:
      - "50051:50051"
      - "8080:8080"  # Health check port
    environment:
      - RUST_LOG=info
      - BITCOIN_NETWORK=testnet
      - DATA_DIR=/app/data
      - GRPC_PORT=50051
      - HTTP_PORT=8080
    volumes:
      - rust-engine-data:/app/data
    networks:
      - satsconnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Node.js API Gateway
  api-gateway:
    build:
      context: ../../
      dockerfile: infra/docker/api-gateway.Dockerfile
    container_name: satsconnect-api-gateway
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - RUST_ENGINE_URL=http://rust-engine:50051
      - BITCOIN_NETWORK=testnet
      - JWT_SECRET=${JWT_SECRET}
      - MPESA_CONSUMER_KEY=${MPESA_CONSUMER_KEY}
      - MPESA_CONSUMER_SECRET=${MPESA_CONSUMER_SECRET}
      - MPESA_SHORTCODE=${MPESA_SHORTCODE}
      - MPESA_PASSKEY=${MPESA_PASSKEY}
      - COINMARKETCAP_API_KEY=${COINMARKETCAP_API_KEY}
    depends_on:
      rust-engine:
        condition: service_healthy
    networks:
      - satsconnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mobile App (Expo Development Server)
  mobile-app:
    build:
      context: ../../
      dockerfile: infra/docker/mobile-app.Dockerfile
    container_name: satsconnect-mobile-app
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - API_BASE_URL=http://api-gateway:4000
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - satsconnect-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: satsconnect-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - satsconnect-network
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: satsconnect-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - satsconnect-network
    restart: unless-stopped

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: satsconnect-loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - satsconnect-network
    restart: unless-stopped

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: satsconnect-promtail
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - satsconnect-network
    restart: unless-stopped

volumes:
  rust-engine-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local

networks:
  satsconnect-network:
    driver: bridge
