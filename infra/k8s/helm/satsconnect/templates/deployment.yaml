{{- if .Values.rustEngine.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "satsconnect.fullname" . }}-rust-engine
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "satsconnect.labels" . | nindent 4 }}
    component: rust-engine
spec:
  replicas: {{ .Values.rustEngine.replicaCount }}
  selector:
    matchLabels:
      {{- include "satsconnect.selectorLabels" . | nindent 6 }}
      component: rust-engine
  template:
    metadata:
      labels:
        {{- include "satsconnect.selectorLabels" . | nindent 8 }}
        component: rust-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.rustEngine.service.httpPort }}"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ include "satsconnect.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: rust-engine
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.rustEngine.image.repository }}:{{ .Values.rustEngine.image.tag }}"
        imagePullPolicy: {{ .Values.rustEngine.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.rustEngine.service.grpcPort }}
          name: grpc
          protocol: TCP
        - containerPort: {{ .Values.rustEngine.service.httpPort }}
          name: http
          protocol: TCP
        env:
        {{- range $key, $value := .Values.rustEngine.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if .Values.secrets.create }}
        - name: BITCOIN_RPC_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-rust-engine-secrets
              key: bitcoin-rpc-url
        - name: BITCOIN_RPC_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-rust-engine-secrets
              key: bitcoin-rpc-user
        - name: BITCOIN_RPC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-rust-engine-secrets
              key: bitcoin-rpc-password
        {{- end }}
        resources:
          {{- toYaml .Values.rustEngine.resources | nindent 10 }}
        volumeMounts:
        - name: rust-engine-data
          mountPath: /app/data
        {{- if .Values.secrets.create }}
        - name: rust-engine-secrets
          mountPath: /app/secrets
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.rustEngine.service.httpPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.rustEngine.service.httpPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: rust-engine-data
        {{- if .Values.rustEngine.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "satsconnect.fullname" . }}-rust-engine-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- if .Values.secrets.create }}
      - name: rust-engine-secrets
        secret:
          secretName: {{ include "satsconnect.fullname" . }}-rust-engine-secrets
      {{- end }}
      nodeSelector:
        kubernetes.io/os: linux
{{- end }}

{{- if .Values.apiGateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "satsconnect.fullname" . }}-api-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "satsconnect.labels" . | nindent 4 }}
    component: api-gateway
spec:
  replicas: {{ .Values.apiGateway.replicaCount }}
  selector:
    matchLabels:
      {{- include "satsconnect.selectorLabels" . | nindent 6 }}
      component: api-gateway
  template:
    metadata:
      labels:
        {{- include "satsconnect.selectorLabels" . | nindent 8 }}
        component: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.apiGateway.service.targetPort }}"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ include "satsconnect.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: api-gateway
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.apiGateway.image.repository }}:{{ .Values.apiGateway.image.tag }}"
        imagePullPolicy: {{ .Values.apiGateway.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.apiGateway.service.targetPort }}
          name: http
          protocol: TCP
        env:
        {{- range $key, $value := .Values.apiGateway.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if .Values.secrets.create }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
              key: jwt-secret
        - name: MPESA_CONSUMER_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
              key: mpesa-consumer-key
        - name: MPESA_CONSUMER_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
              key: mpesa-consumer-secret
        - name: MPESA_SHORTCODE
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
              key: mpesa-shortcode
        - name: MPESA_PASSKEY
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
              key: mpesa-passkey
        - name: COINMARKETCAP_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
              key: coinmarketcap-api-key
        {{- end }}
        resources:
          {{- toYaml .Values.apiGateway.resources | nindent 10 }}
        volumeMounts:
        - name: api-gateway-logs
          mountPath: /app/logs
        {{- if .Values.secrets.create }}
        - name: api-gateway-secrets
          mountPath: /app/secrets
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.apiGateway.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.apiGateway.service.targetPort }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: api-gateway-logs
        emptyDir: {}
      {{- if .Values.secrets.create }}
      - name: api-gateway-secrets
        secret:
          secretName: {{ include "satsconnect.fullname" . }}-api-gateway-secrets
      {{- end }}
      nodeSelector:
        kubernetes.io/os: linux
{{- end }}
