name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        release_name: Release ${{ github.ref_name || github.event.inputs.version }}
        body: |
          ## SatsConnect ${{ github.ref_name || github.event.inputs.version }}
          
          ### What's New
          - üöÄ Production-ready Bitcoin Lightning wallet
          - üí∞ MPesa integration for KES ‚Üî BTC
          - üì± Cross-platform mobile app (iOS/Android)
          - üîí Enterprise-grade security
          - üåç Built for Africa
          
          ### Components
          - **Rust gRPC Engine**: High-performance Lightning node
          - **Node.js Orchestrator**: REST API and fiat integrations
          - **React Native App**: Mobile wallet interface
          
          ### Installation
          See [README.md](./README.md) for detailed setup instructions.
        draft: false
        prerelease: false

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Rust Engine image
      uses: docker/build-push-action@v5
      with:
        context: ./backend/rust-engine
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/rust-engine:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push Node Orchestrator image
      uses: docker/build-push-action@v5
      with:
        context: ./backend/node-orchestrator
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/node-orchestrator:${{ github.ref_name }}
        labels: ${{ steps.meta.outputs.labels }}

  build-mobile:
    name: Build Mobile App
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json

    - name: Install dependencies
      run: |
        cd mobile
        npm ci

    - name: Install Expo CLI
      run: npm install -g @expo/cli@latest

    - name: Build for Android
      run: |
        cd mobile
        npx expo build:android --type apk --non-interactive
      continue-on-error: true

    - name: Build for iOS
      run: |
        cd mobile
        npx expo build:ios --type archive --non-interactive
      continue-on-error: true

    - name: Upload mobile builds
      uses: actions/upload-artifact@v4
      with:
        name: mobile-builds
        path: mobile/dist/
        retention-days: 30

  upload-assets:
    name: Upload Release Assets
    runs-on: ubuntu-latest
    needs: [create-release, build-and-push, build-mobile]

    steps:
    - name: Download mobile builds
      uses: actions/download-artifact@v5
      with:
        name: mobile-builds
        path: ./mobile-builds

    - name: Upload mobile APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./mobile-builds/android.apk
        asset_name: satsconnect-android.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload mobile IPA
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./mobile-builds/ios.ipa
        asset_name: satsconnect-ios.ipa
        asset_content_type: application/octet-stream
      continue-on-error: true
